{"version":3,"file":"static/js/949.115308dd.chunk.js","mappings":"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","sources":["components/Navbar.jsx"],"sourcesContent":["// src/components/Navbar.jsx\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { FaTimes, FaBars, FaCrown } from 'react-icons/fa';\r\nimport './Navbar.css';\r\nimport Logo from '../assets/logo-icon.webp';\r\n\r\nconst Navbar = () => {\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const [activeSection, setActiveSection] = useState('home');\r\n  const sectionsRef = useRef([]);\r\n\r\n  // Add scroll event for navbar background\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrolled(window.scrollY > 10);\r\n    };\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n    handleScroll(); // Set initial state\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sectionsRef.current = [\r\n      'home', 'about', 'categories', 'pdf-library', 'testimonials', 'contact'\r\n    ].map(id => document.getElementById(id));\r\n\r\n    // Cache section positions to avoid layout thrashing\r\n    let sectionPositions = [];\r\n    const updateSectionPositions = () => {\r\n      sectionPositions = sectionsRef.current.map(section => {\r\n        if (!section) return null;\r\n        return {\r\n          id: section.id,\r\n          offsetTop: section.offsetTop,\r\n          offsetHeight: section.offsetHeight\r\n        };\r\n      });\r\n    };\r\n    updateSectionPositions();\r\n    window.addEventListener('resize', updateSectionPositions, { passive: true });\r\n\r\n    const updateActiveSection = () => {\r\n      const scrollPosition = window.scrollY + 110;\r\n      let found = false;\r\n      for (const pos of sectionPositions) {\r\n        if (!pos) continue;\r\n        const { offsetTop, offsetHeight, id } = pos;\r\n        if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {\r\n          if (activeSection !== id) {\r\n            setActiveSection(id);\r\n          }\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found && activeSection !== 'home') {\r\n        setActiveSection('home');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', updateActiveSection, { passive: true });\r\n    updateActiveSection(); // Set initial\r\n    return () => {\r\n      window.removeEventListener('scroll', updateActiveSection);\r\n      window.removeEventListener('resize', updateSectionPositions);\r\n    };\r\n  }, [activeSection]);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.toggle('overflow-hidden', mobileMenuOpen);\r\n  }, [mobileMenuOpen]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Escape' && mobileMenuOpen) {\r\n        setMobileMenuOpen(false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [mobileMenuOpen]);\r\n\r\n  const handleNavClick = (id) => {\r\n    setActiveSection(id);\r\n    setMobileMenuOpen(false);\r\n    const section = document.getElementById(id);\r\n    if (section) section.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <header className={`navbar ${scrolled ? 'scrolled' : ''} ${mobileMenuOpen ? 'mobile-open' : ''}`}>\r\n      <div className=\"container\">\r\n        <a href=\"#home\" className=\"navbar-brand\" aria-label=\"CrackTest home link\">\r\n          <img src={Logo} alt=\"CrackTest logo\" className=\"logo-icon\" />\r\n          <span className=\"logo-text\">CrackTest</span>\r\n          <span className=\"logo-dot\" aria-hidden=\"true\">.</span>\r\n        </a>\r\n\r\n        <button\r\n          className=\"mobile-menu-toggle\"\r\n          onClick={() => setMobileMenuOpen(prev => !prev)}\r\n          aria-label={mobileMenuOpen ? 'Close menu' : 'Open menu'}\r\n          aria-expanded={mobileMenuOpen}\r\n        >\r\n          {mobileMenuOpen ? <FaTimes /> : <FaBars />}\r\n        </button>\r\n\r\n        <nav id=\"main-navigation\" className={`navbar-nav ${mobileMenuOpen ? 'open' : ''}`} role=\"navigation\" aria-label=\"Main Navigation\">\r\n          <div className=\"nav-links\">\r\n            {[\r\n              { id: 'home', label: 'Home' },\r\n              { id: 'about', label: 'About' },\r\n              { id: 'categories', label: 'Quiz' },\r\n              { id: 'pdf-library', label: 'PDF Library', icon: <FaCrown /> },\r\n              { id: 'testimonials', label: 'Testimonials' },\r\n              { id: 'contact', label: 'Contact' }\r\n            ].map(({ id, label, icon }) => (\r\n              <a\r\n                key={id}\r\n                href={`#${id}`}\r\n                className={`nav-link ${id === 'pdf-library' ? 'premium-link' : ''} ${activeSection === id ? 'active' : ''}`}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleNavClick(id);\r\n                }}\r\n                onKeyDown={(e) => e.key === 'Enter' && handleNavClick(id)}\r\n                aria-current={activeSection === id ? 'page' : undefined}\r\n              >\r\n                <span>{label}</span>\r\n                {icon && <span className=\"premium-icon\" aria-hidden=\"true\">{icon}</span>}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":["Navbar","scrolled","setScrolled","useState","mobileMenuOpen","setMobileMenuOpen","activeSection","setActiveSection","sectionsRef","useRef","useEffect","handleScroll","window","scrollY","addEventListener","passive","removeEventListener","current","map","id","document","getElementById","sectionPositions","updateSectionPositions","section","offsetTop","offsetHeight","updateActiveSection","scrollPosition","found","pos","body","classList","toggle","handleKeyDown","e","key","handleNavClick","scrollIntoView","behavior","_jsx","className","children","_jsxs","href","src","Logo","alt","onClick","prev","FaTimes","FaBars","role","label","icon","FaCrown","_ref","preventDefault","onKeyDown","undefined"],"sourceRoot":""}